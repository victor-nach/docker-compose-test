{"version":3,"sources":["../../src/todos/model.js"],"names":["transformResponse","schema","title","type","String","required","errors","completed","Boolean","default","order","Number","cleanUpTodoObject","todo","baseUrl","hasOwnProperty","position","Object","entries","key","value","undefined","url","id","result","todos","map","obj"],"mappings":";;;;;;;;kBAmCwBA,iB;AAnCjB,IAAMC,0BAAS;AACpBC,SAAO;AACLC,UAAMC,MADD;AAELC,cAAU,IAFL;AAGLC,YAAQ;AACNH,YAAM,yBADA;AAENE,gBAAU;AAFJ;AAHH,GADa;AASpBE,aAAW;AACTJ,UAAMK,OADG;AAETH,cAAU,KAFD;AAGTI,aAAS;AAHA,GATS;AAcpBC,SAAO;AACLP,UAAMQ,MADD;AAELN,cAAU;AAFL;AAda,CAAf;;AAoBP,SAASO,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AACxC,MAAID,KAAKE,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACnCF,SAAKH,KAAL,GAAaG,KAAKG,QAAlB;AACA,WAAOH,KAAKG,QAAZ;AACD;;AAJuC;AAAA;AAAA;;AAAA;AAMxC,yBAAyBC,OAAOC,OAAP,CAAeL,IAAf,CAAzB,8HAA+C;AAAA;AAAA,UAArCM,GAAqC;AAAA,UAAhCC,KAAgC;;AAC7C,UAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAAhC,EAA2C,OAAOR,KAAKM,GAAL,CAAP;AAC5C;AARuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUxCN,OAAKS,GAAL,GAAcR,OAAd,eAA+BD,KAAKU,EAApC;;AAEA,SAAOV,IAAP;AACD;;AAEc,SAASb,iBAAT,CAA2BwB,MAA3B,EAAmC;AAChD,MAAIA,OAAOC,KAAX,EAAkB;AAChBD,aAASA,OAAOC,KAAP,CAAaC,GAAb,CAAiB,UAACC,GAAD;AAAA,aAASf,kBAAkBe,GAAlB,EAAuBH,OAAOV,OAA9B,CAAT;AAAA,KAAjB,CAAT;AACD;;AAED,MAAIU,OAAOX,IAAX,EAAiB;AACfW,aAASZ,kBAAkBY,OAAOX,IAAzB,EAA+BW,OAAOV,OAAtC,CAAT;AACD;;AAED,SAAOU,MAAP;AACD","file":"model.js","sourcesContent":["export const schema = {\n  title: {\n    type: String,\n    required: true,\n    errors: {\n      type: 'Title must be a string.',\n      required: 'Title is required.'\n    }\n  },\n  completed: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  order: {\n    type: Number,\n    required: false\n  }\n};\n\nfunction cleanUpTodoObject(todo, baseUrl) {\n  if (todo.hasOwnProperty('position')) {\n    todo.order = todo.position;\n    delete todo.position;\n  }\n\n  for (var [key, value] of Object.entries(todo)) {\n    if (value === null || value === undefined) delete todo[key];\n  }\n\n  todo.url = `${baseUrl}/todos/${todo.id}`;\n\n  return todo;\n}\n\nexport default function transformResponse(result) {\n  if (result.todos) {\n    result = result.todos.map((obj) => cleanUpTodoObject(obj, result.baseUrl));\n  }\n\n  if (result.todo) {\n    result = cleanUpTodoObject(result.todo, result.baseUrl);\n  }\n\n  return result;\n}\n"]}